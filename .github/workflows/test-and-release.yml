name: Test and Release

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  release:
    runs-on: ubuntu-latest
    needs: test # This job will only run if the tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Get version from package.json
        id: get_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "PACKAGE_VERSION=$version" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.PACKAGE_VERSION }}" >/dev/null 2>&1; then
            echo "Tag v${{ env.PACKAGE_VERSION }} already exists."
            echo "tag_exists=true" >> $GITHUB_ENV
          else
            echo "tag_exists=false" >> $GITHUB_ENV
          fi
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}

      - name: Build .ics file
        if: env.tag_exists == 'false' # Only run if the tag doesn't exist
        run: npm run build
        env:
          NODE_ENV: production

      - name: Create or update GitHub release
        if: env.tag_exists == 'false' # Only create a release if the tag doesn't exist
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ env.PACKAGE_VERSION }}'
          release_name: 'Version ${{ env.PACKAGE_VERSION }}'
          draft: false
          prerelease: false
          body: |
            This release was automatically created by a GitHub Action.
            - Version: ${{ env.PACKAGE_VERSION }}
            - Commit: ${{ github.sha }}

      - name: Upload release assets
        if: env.tag_exists == 'false' # Only upload assets if the release was created
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: output/generated_prayer_times.ics
          asset_name: generated_prayer_times.ics
          asset_content_type: text/calendar
